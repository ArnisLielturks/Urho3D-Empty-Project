name: Builds

on: [push, pull_request]

jobs:
  build_android:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v1
        id: cache
        with:
          path: ${{github.workspace}}/Urho3D
          key: Urho3D-android-${{runner.os}}
      - name: Build
        run: ./android/script.sh
      - uses: actions/upload-artifact@v1
        with:
          name: Build_Android.apk
          path: Urho3D/ProjectTemplate.apk

  build_web:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v1
        id: cache
        with:
          path: ${{github.workspace}}/Urho3D-web
          key: Urho3D-web-${{runner.os}}
      - name: Build
        run: ./web/script.sh
      - name: Build archive
        run: |
          mkdir archive
          cp -r Urho3D-web/build/web/bin/ProjectTemplate* archive/
          chmod -R 777 archive
          chmod a+x archive/ProjectTemplate.desktop
          cd archive
          zip -r "build_web.zip" *  > /dev/null
      - uses: actions/upload-artifact@v1
        with:
          name: Build_Web.zip
          path: archive/build_web.zip

  build_linux:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Build
        run: docker run -v $(pwd):/var/sample arnislielturks/urho3d:29-linux bash /var/sample/build_linux.sh
      - name: Build archive
        run: |
          mkdir archive
          cp build/bin/ProjectTemplate archive/ProjectTemplate || true
          cp build/bin/ProjectTemplate_d archive/ProjectTemplate_d || true
          cp -r bin/Data archive/Data
          cp -r bin/CoreData archive/CoreData
          cp -r bin/ProjectTemplate.desktop archive/ProjectTemplate.desktop
          rm -rf archive/Data/Saves/Achievements.json
          chmod -R 777 archive
          chmod a+x archive/ProjectTemplate.desktop
          cd archive
          zip -r "build_linux.zip" *  > /dev/null
      - uses: actions/upload-artifact@v1
        with:
          name: Build_Linux.zip
          path: archive/build_linux.zip

  build_windows:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Build
        run: docker run -v $(pwd):/var/sample arnislielturks/urho3d:30-windows bash /var/sample/build_windows.sh
      - name: Build archive
        run: |
          mkdir archive
          cp build/bin/ProjectTemplate archive/ProjectTemplate || true
          cp build/bin/ProjectTemplate_d archive/ProjectTemplate_d || true
          cp -r bin/Data archive/Data
          cp -r bin/CoreData archive/CoreData
          rm -rf archive/Data/Saves/Achievements.json
          chmod -R 777 archive
          cd archive
          zip -r "build_windows.zip" *  > /dev/null
      - uses: actions/upload-artifact@v1
        with:
          name: Build_Windows.zip
          path: archive/build_windows.zip

  build_osx:
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v2
    - uses: actions/cache@v1
      id: cache
      with:
        path: ${{github.workspace}}/Urho3D
        key: Urho3D-${{runner.os}} 
    - name: Download Urho3D
      if: steps.cache.outputs.cache-hit != 'true'
      run: git clone https://github.com/ArnisLielturks/Urho3D.git --depth=1
    - name: Build Urho3D
      run: |
        export CPATH=`xcrun --show-sdk-path`/usr/include
        cd ${{github.workspace}}/Urho3D
        git pull origin master
        ./script/cmake_generic.sh build -DURHO3D_SAMPLES=0 -DURHO3D_EXTRAS=0 -DURHO3D_TOOLS=0 -DURHO3D_PLAYER=0
        cd build
        make -j$(nproc)
    - name: Build project
      run: |
        export URHO3D_HOME="${{github.workspace}}/Urho3D/build"
        export CPATH=`xcrun --show-sdk-path`/usr/include
        ./script/cmake_generic.sh build
        cd build
        make -j$(nproc)
        cd ..
    - name: Build archive
      run: |
        mkdir archive
        cp build/bin/ProjectTemplate archive/ProjectTemplate || true
        cp build/bin/ProjectTemplate_d archive/ProjectTemplate_d || true
        cp -r bin/Data archive/Data
        cp -r bin/CoreData archive/CoreData
        rm -rf archive/Data/Saves/Achievements.json
        chmod -R 777 archive
        cd archive
        zip -r "build_osx.zip" *  > /dev/null
    - uses: actions/upload-artifact@v1
      with:
        name: Build_OSX.zip
        path: archive/build_osx.zip

